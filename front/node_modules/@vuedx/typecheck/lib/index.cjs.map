{"version":3,"file":"index.cjs","sources":["../src/TypeScriptServerHost.ts","../src/diagnostics.ts","../../../.pnpm/vscode-languageserver-textdocument@1.0.4/node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../src/generateCodeFrame.ts","../src/cli.ts","../src/index.ts"],"sourcesContent":["import { ChildProcess, fork } from 'child_process'\nimport * as Path from 'path'\nimport { createInterface, Interface } from 'readline'\nimport resolveFrom from 'resolve-from'\nimport type { Readable, Writable } from 'stream'\nimport type * as Proto from 'typescript/lib/protocol'\n\nfunction resolve(moduleId: string, directory: string): string {\n  try {\n    return resolveFrom(directory, moduleId)\n  } catch {\n    return require.resolve(moduleId)\n  }\n}\n\nconst isDebugMode = process.env['DEBUG'] != null\nfunction debug(...args: any[]): void {\n  if (__DEV__ && isDebugMode) {\n    console.debug(...args)\n  }\n}\n\nexport class TypeScriptServerHost {\n  private readonly voidCommands: Proto.CommandTypes[] = [\n    'open' as Proto.CommandTypes.Open,\n    'geterr' as Proto.CommandTypes.Geterr,\n    'geterrForProject' as Proto.CommandTypes.GeterrForProject,\n  ]\n\n  public readonly serverPath = resolve('typescript/lib/tsserver', process.cwd())\n  public readonly pluginPath = Path.resolve(\n    Path.dirname(require.resolve('@vuedx/typescript-plugin-vue/package.json')),\n    '../..',\n  )\n\n  public readonly exitStatus: Promise<number>\n\n  private isClosed = false\n  private readonly server: ChildProcess\n  private readonly stdin: Writable\n  private readonly stdout: Readable\n  private readonly readline: Interface\n\n  private pendingResponses = 0\n\n  private readonly responseHandlers = new Map<\n    number,\n    (response: Proto.Response) => void\n  >()\n\n  private _messageId = 0\n  private getNextMessageId(): number {\n    return this._messageId++\n  }\n\n  constructor() {\n    // prettier-ignore\n    const debugArgs =\n      process.env['DEBUG_TS_SERVER'] != null\n        ? [\n            '--logVerbosity', 'verbose',\n            '--logFile', process.env['TS_SERVER_LOG_FILE'] ?? 'tsserver.log',\n          ]\n        : []\n    // prettier-ignore\n    this.server = fork(this.serverPath, [\n      ...debugArgs,\n      '--globalPlugins', '@vuedx/typescript-plugin-vue',\n      '--pluginProbeLocations', `${process.cwd()},${this.pluginPath}`,\n      '--allowLocalPluginLoads',\n      '--useSingleInferredProject'\n    ], {\n      cwd: process.cwd(),\n      stdio: ['pipe', 'pipe', 'pipe', 'ipc'],\n      execArgv: \n        process.env['TS_SERVER_INSPECT'] != null ? ['--inspect'] :\n        process.env['TS_SERVER_INSPECT_BRK'] != null ? ['--inspect-brk=9229'] :\n        []\n    });\n\n    this.exitStatus = new Promise((resolve) => {\n      let isResolved = false\n      this.server.on('exit', (code) => {\n        if (!isResolved) resolve(code ?? 0)\n      })\n\n      this.server.on('error', (error) => {\n        isResolved = true\n        console.error(error)\n\n        resolve(-1)\n      })\n    })\n\n    if (this.server.stdout == null) throw new Error('No stdout')\n    if (this.server.stdin == null) throw new Error('No stdin')\n\n    this.stdout = this.server.stdout\n    this.stdin = this.server.stdin\n\n    this.stdout.setEncoding('utf-8')\n    this.readline = createInterface({ input: this.stdout })\n\n    this.readline.on('line', (line) => {\n      if (line.startsWith('{')) {\n        const payload: Proto.Request | Proto.Response | Proto.Event =\n          JSON.parse(line)\n\n        debug('RECV:', payload)\n        if (payload.type === 'response') {\n          this.pendingResponses -= 1\n          this.responseHandlers.get(payload.request_seq)?.(payload)\n        } else if (payload.type === 'request') {\n          // --\n        } else if (payload.type === 'event') {\n          this.onEvent(payload)\n        }\n\n        if (this.isClosed) {\n          this.shutdown()\n        }\n      }\n    })\n  }\n\n  private eventHandlers: Record<string, Function[]> = {}\n\n  private onEvent(payload: Proto.Event): void {\n    this.eventHandlers[payload.event]?.forEach((fn) => fn(payload.body))\n  }\n\n  private send(message: Omit<Proto.Message, 'seq'>): number {\n    if (this.isClosed) {\n      throw new Error('Cannot send messages to a closed server connection.')\n    }\n\n    const seq = this.getNextMessageId()\n    const payload = { seq, ...message }\n    debug('SEND:', payload)\n    this.stdin.write(JSON.stringify(payload) + '\\n')\n\n    return seq\n  }\n\n  public on(\n    event: Proto.DiagnosticEventKind,\n    fn: (\n      event: Required<Proto.DiagnosticEvent>['body'],\n    ) => void | Promise<void>,\n  ): () => void\n  public on(\n    event: Proto.RequestCompletedEventName,\n    fn: (\n      event: Required<Proto.RequestCompletedEvent>['body'],\n    ) => void | Promise<void>,\n  ): () => void\n  public on(\n    event: Proto.ProjectLoadingFinishEventName,\n    fn: (\n      event: Required<Proto.ProjectLoadingFinishEvent>['body'],\n    ) => void | Promise<void>,\n  ): () => void\n  public on(\n    event: Proto.ProjectsUpdatedInBackgroundEventName,\n    fn: (\n      event: Required<Proto.ProjectsUpdatedInBackgroundEvent>['body'],\n    ) => void | Promise<void>,\n  ): () => void\n\n  public on(\n    event:\n      | Proto.DiagnosticEventKind\n      | Proto.RequestCompletedEventName\n      | Proto.ProjectLoadingFinishEventName\n      | Proto.ProjectsUpdatedInBackgroundEventName,\n    fn: Function,\n  ): () => void {\n    const handlers =\n      this.eventHandlers[event] ?? (this.eventHandlers[event] = [])\n\n    handlers.push(fn)\n\n    return () => {\n      const index = handlers.indexOf(fn)\n      if (index >= 0) {\n        handlers.splice(index, 1)\n      }\n    }\n  }\n\n  public async sendRequest(\n    request: Omit<Proto.Request, 'seq' | 'type'>,\n  ): Promise<Proto.Response | number | undefined> {\n    const id = this.send({ type: 'request', ...request })\n\n    if (!this.voidCommands.includes(request.command as Proto.CommandTypes)) {\n      this.pendingResponses += 1\n      return await new Promise((resolve) => {\n        this.responseHandlers.set(id, (response) => resolve(response))\n      })\n    } else {\n      return id\n    }\n  }\n\n  public sendEvent(event: Omit<Proto.Request, 'seq' | 'type'>): void {\n    this.send({ type: 'event', ...event })\n  }\n\n  public async close(): Promise<number> {\n    this.isClosed = true\n    this.shutdown()\n\n    return await this.exitStatus\n  }\n\n  private shutdown(): void {\n    if (this.pendingResponses <= 0) {\n      debug(`shutting down...`)\n      this.stdin.end()\n    } else {\n      debug(`shutting after ${this.pendingResponses}...`)\n    }\n  }\n\n  public async sendCommand(\n    command: 'configure' | Proto.CommandTypes.Configure,\n    args: Proto.ConfigureRequest['arguments'],\n  ): Promise<Proto.ConfigureResponse>\n  public async sendCommand(\n    command: 'projectInfo' | Proto.CommandTypes.ProjectInfo,\n    args: Proto.ProjectInfoRequest['arguments'],\n  ): Promise<Proto.ProjectInfoResponse>\n\n  public async sendCommand(\n    command:\n      | 'compilerOptionsForInferredProjects'\n      | Proto.CommandTypes.CompilerOptionsForInferredProjects,\n    args: Proto.SetCompilerOptionsForInferredProjectsRequest['arguments'],\n  ): Promise<Proto.SetCompilerOptionsForInferredProjectsResponse>\n\n  public async sendCommand(\n    command: 'updateOpen' | Proto.CommandTypes.UpdateOpen,\n    args: Proto.UpdateOpenRequest['arguments'],\n  ): Promise<number>\n\n  public async sendCommand(\n    command: 'geterr' | Proto.CommandTypes.Geterr,\n    args: Proto.GeterrRequest['arguments'],\n  ): Promise<number>\n  public async sendCommand(\n    command: 'geterrForProject' | Proto.CommandTypes.GeterrForProject,\n    args: Proto.GeterrForProjectRequest['arguments'],\n  ): Promise<number>\n\n  public async sendCommand(command: string, args: any): Promise<any> {\n    return this.sendRequest({ command, arguments: args }) as any\n  }\n}\n","import { flatten, invariant } from '@vuedx/shared'\nimport glob from 'fast-glob'\nimport * as FS from 'fs'\nimport * as Path from 'path'\nimport type * as ts from 'typescript/lib/tsserverlibrary'\nimport * as TS from 'typescript/lib/tsserverlibrary'\nimport { TypeScriptServerHost } from './TypeScriptServerHost'\n\nfunction toNormalizedPath(fileName: string): string {\n  return TS.server.toNormalizedPath(fileName)\n}\nexport type Diagnostics = Array<{\n  fileName: string\n  diagnostics: ts.server.protocol.Diagnostic[]\n}>\n\nclass AbortSignal {\n  private _aborted = false\n  private _onabort?: () => void | Promise<void>\n\n  public get aborted(): boolean {\n    return this._aborted\n  }\n\n  // eslint-disable-next-line accessor-pairs\n  public set onabort(fn: () => void | Promise<void>) {\n    this._onabort = fn\n  }\n\n  private async dispatchEvent(_event: 'aborted'): Promise<void> {\n    this._aborted = true\n    return await this._onabort?.()\n  }\n}\nexport class AbortController {\n  public readonly signal = new AbortSignal()\n\n  public async abort(): Promise<void> {\n    // @ts-expect-error\n    return await this.signal.dispatchEvent('aborted')\n  }\n}\n\nexport async function* getDiagnosticsStream(\n  directory: string,\n  cancellationToken: AbortSignal | null,\n  logging: boolean = false,\n  filter: (fileName: string) => boolean = () => true,\n): AsyncGenerator<\n  {\n    fileName: string\n    diagnostics: ts.server.protocol.Diagnostic[]\n  },\n  Diagnostics\n> {\n  const debug: typeof console.debug = logging ? console.debug : () => {}\n  const host = new TypeScriptServerHost()\n  if (cancellationToken != null) {\n    cancellationToken.onabort = async () => {\n      await host.close()\n    }\n  }\n  const projectRootPath = toNormalizedPath(directory)\n  const diagnosticsPerFile = new Map<\n    string,\n    {\n      semantic?: ts.server.protocol.Diagnostic[]\n      syntax?: ts.server.protocol.Diagnostic[]\n      suggestion?: ts.server.protocol.Diagnostic[]\n    }\n  >()\n\n  function setDiagnostics(\n    fileName: string,\n    kind: 'semantic' | 'syntax' | 'suggestion',\n    diagnostics: ts.server.protocol.Diagnostic[],\n  ): void {\n    debug(`[diagnostics] ${kind} ${fileName}`)\n    const current = {\n      ...(diagnosticsPerFile.get(fileName) ?? {}),\n      [kind]: diagnostics,\n    }\n    diagnosticsPerFile.set(fileName, current)\n\n    if (\n      current.semantic != null &&\n      current.syntax != null &&\n      current.suggestion != null\n    ) {\n      const all = merge(current.semantic, current.syntax, current.suggestion)\n      if (all.length > 0) {\n        results.push({ fileName, diagnostics: all })\n        debug(`Completed ${fileName}. ${all.length} issue(s).`)\n      } else {\n        debug(`Completed ${fileName}. No issues.`)\n      }\n      pending.delete(fileName)\n    }\n  }\n  const pack = (): Diagnostics =>\n    Array.from(diagnosticsPerFile.entries())\n      .map(([fileName, diagnostics]) => ({\n        fileName,\n        diagnostics: merge(\n          diagnostics.semantic,\n          diagnostics.suggestion,\n          diagnostics.syntax,\n        ),\n      }))\n      .filter((item) => item.diagnostics.length > 0)\n\n  await host.sendCommand('configure', {\n    hostInfo: '@vuedx/typecheck',\n    preferences: { disableSuggestions: false },\n  })\n\n  let files: string[]\n  let projectFileName: string | undefined\n  const jsConfig = Path.resolve(directory, 'jsconfig.json')\n  const tsConfig = Path.resolve(directory, 'tsconfig.json')\n  if (FS.existsSync(tsConfig) || FS.existsSync(jsConfig)) {\n    projectFileName = FS.existsSync(tsConfig) ? tsConfig : jsConfig\n    debug('Using project', projectFileName)\n    await host.sendCommand('updateOpen', {\n      openFiles: [\n        {\n          file: toNormalizedPath(projectFileName),\n          projectRootPath,\n        },\n      ],\n    })\n\n    const { body } = await host.sendCommand('projectInfo', {\n      file: toNormalizedPath(projectFileName),\n      projectFileName: toNormalizedPath(projectFileName),\n      needFileNameList: true,\n    })\n\n    invariant(body != null, 'Project info is null.')\n    invariant(body.fileNames != null, 'Project has no files.')\n\n    files = body.fileNames.filter((fileName) => {\n      if (\n        fileName.includes('/node_modules/') ||\n        fileName.endsWith('.json') ||\n        fileName.endsWith('.vue.tsx') ||\n        fileName.endsWith('.vue.jsx')\n      ) {\n        return false\n      }\n\n      return filter(fileName)\n    })\n  } else {\n    await host.sendCommand('compilerOptionsForInferredProjects', {\n      options: {\n        allowJs: true,\n        checkJs: true,\n        strict: true,\n        alwaysStrict: true,\n        allowNonTsExtensions: true,\n        jsx: 'preserve' as any,\n      },\n    })\n\n    files = (\n      await glob(['**/*.vue', '**/*.ts', '**/*.js', '**/*.jsx', '**/*.tsx'], {\n        cwd: directory,\n        absolute: true,\n        ignore: ['node_modules', 'dist'],\n      })\n    )\n      .filter(filter)\n      .map((fileName) => toNormalizedPath(fileName))\n\n    debug('Using inferred project', directory)\n  }\n\n  debug(`found ${files.length} files`)\n\n  host.on('semanticDiag', (event) => {\n    setDiagnostics(event.file, 'semantic', event.diagnostics)\n  })\n\n  host.on('syntaxDiag', (event) => {\n    setDiagnostics(event.file, 'syntax', event.diagnostics)\n  })\n\n  host.on('suggestionDiag', (event) => {\n    setDiagnostics(event.file, 'suggestion', event.diagnostics)\n  })\n\n  const pending = new Set<string>(files)\n  const results: Diagnostics = []\n\n  void Promise.all(\n    files.map(async (file) => {\n      await host.sendCommand('updateOpen', {\n        openFiles: [\n          {\n            file,\n            projectRootPath,\n            projectFileName,\n          },\n        ],\n      })\n      await host.sendCommand('geterr', { files, delay: 1 })\n    }),\n  )\n\n  while (\n    cancellationToken == null ? pending.size > 0 : !cancellationToken.aborted\n  ) {\n    const result = results.shift()\n    if (result != null) {\n      debug(`Yielding ${result.fileName}`)\n      yield result\n    }\n    if (pending.size === 0) break\n    else {\n      debug(`Waiting for ${pending.size} files`)\n      await new Promise((resolve) => setTimeout(resolve, 100))\n    }\n  }\n\n  debug(`Done.`)\n\n  await host.close()\n\n  return pack()\n}\n\nexport async function getDiagnostics(directory: string): Promise<Diagnostics> {\n  const stream = getDiagnosticsStream(\n    directory,\n    null,\n    process.env['DEBUG'] != null,\n  )\n  let next: IteratorResult<Diagnostics[0], Diagnostics>\n  while ((next = await stream.next()).done === false);\n  invariant(next.done === true, 'Stream should be done.')\n  return next.value\n}\n\nfunction merge<T>(...items: Array<T[] | undefined>): T[] {\n  return flatten(items.map((item) => item ?? []))\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (let change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            let startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        let ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        let ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","export function generateCodeFrame(\n  source: string,\n  start = 0,\n  end = source.length,\n  underline = (str: string) => str,\n  gutter = (str: string) => str,\n  range: number = 2,\n): string {\n  const lines = source.split(/\\r?\\n/)\n  let count = 0\n  const res: string[] = []\n  const width = String(lines.length).length\n  const getLine = (line: number | string): string =>\n    String(line).padStart(width) + ' | '\n  for (let i = 0; i < lines.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    count += lines[i]!.length + 1\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        const line = j + 1\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        res.push(`${gutter(getLine(line))}${lines[j]!}`)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const lineLength = lines[j]!.length\n        if (j === i) {\n          // push underline\n          const pad = start - (count - lineLength) + 1\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start,\n          )\n          res.push(\n            gutter(getLine('')) +\n              ' '.repeat(pad) +\n              underline('~'.repeat(length)),\n          )\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1)\n            res.push(gutter(getLine('')) + underline('~'.repeat(length)))\n          }\n          count += lineLength + 1\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n","import { collect, collectError, invariant } from '@vuedx/shared'\nimport chalk from 'chalk'\nimport FS, { promises as FSP } from 'fs'\nimport parseArgs from 'minimist'\nimport * as Path from 'path'\nimport readline from 'readline'\nimport TS from 'typescript/lib/tsserverlibrary'\nimport { Position, TextDocument } from 'vscode-languageserver-textdocument'\nimport {\n  AbortController,\n  Diagnostics,\n  getDiagnosticsStream,\n} from './diagnostics'\nimport { generateCodeFrame } from './generateCodeFrame'\n\nconst colors = {\n  warning: chalk.yellow,\n  error: chalk.red,\n  suggestion: chalk.green,\n  message: chalk.blueBright,\n}\nlet directory = process.cwd()\nconst cache = new Map<string, TextDocument>()\n\nfunction print(chunk: string): void {\n  process.stdout.write(chunk)\n}\nexport async function getTextDocument(file: string): Promise<TextDocument> {\n  return cache.get(file) ?? (await createTextDocument(file))\n}\n\nfunction clearScreen(): void {\n  const blank = '\\n'.repeat(process.stdout.rows)\n  console.log(blank)\n  readline.cursorTo(process.stdout, 0, 0)\n  readline.clearScreenDown(process.stdout)\n}\n\nasync function createTextDocument(file: string): Promise<TextDocument> {\n  const content = await FSP.readFile(Path.resolve(directory, file), {\n    encoding: 'utf-8',\n  })\n  const fileName = toNormalizedPath(file)\n  const document = TextDocument.create(\n    fileName,\n    Path.posix.extname(file),\n    0,\n    content,\n  )\n\n  cache.set(fileName, document)\n\n  return document\n}\n\nfunction toNormalizedPath(fileName: string): string {\n  return TS.server.toNormalizedPath(fileName)\n}\n\nfunction formatLocation(\n  fileName: string,\n  start: TS.server.protocol.Location,\n): string {\n  const relativeFileName = convertToRelativePath(fileName)\n  const line = start.line\n  const column = start.offset\n\n  let output = ''\n  output += chalk.cyan(relativeFileName)\n  output += ':'\n  output += chalk.yellow(`${line}`)\n  output += ':'\n  output += chalk.yellow(`${column}`)\n  return output\n}\n\nfunction getDiagnosticCategory(\n  diagnostic: Pick<TS.server.protocol.Diagnostic, 'category'>,\n): keyof typeof colors {\n  return (\n    /^(warning|error|suggestion|message)$/i.test(diagnostic.category)\n      ? diagnostic.category.toLowerCase()\n      : 'error'\n  ) as any\n}\n\nfunction toPosition(loc: TS.server.protocol.Location): Position {\n  return { line: loc.line - 1, character: loc.offset - 1 }\n}\n\nasync function formatDiagnosticsWithColorAndContext(\n  fileName: string,\n  diagnostic: TS.server.protocol.Diagnostic,\n): Promise<string> {\n  let output = ''\n  output += formatLocation(fileName, diagnostic.start) // TODO: GH#18217\n  output += ' - '\n  const category = getDiagnosticCategory(diagnostic)\n  output += colors[category](category)\n  output += chalk.gray(` ${diagnostic.source ?? ''}${diagnostic.code ?? ''}: `)\n  output += diagnostic.text\n\n  const document = await getTextDocument(fileName)\n  output += '\\n'\n  output += generateCodeFrame(\n    document.getText(),\n    document.offsetAt(toPosition(diagnostic.start)),\n    document.offsetAt(toPosition(diagnostic.end)),\n    (underline) => colors[category](underline),\n    (gutter) => chalk.bgWhite(gutter.trimEnd()) + ' ',\n  )\n  if (diagnostic.relatedInformation != null) {\n    for (const { message, span, category } of diagnostic.relatedInformation) {\n      output += '\\n'\n      const color = colors[getDiagnosticCategory({ category })]\n      if (span != null) {\n        output += '    ' + formatLocation(span.file, span.start)\n        const document = await getTextDocument(span.file)\n        output += '\\n'\n        output += generateCodeFrame(\n          document.getText(),\n          document.offsetAt(toPosition(span.start)),\n          document.offsetAt(toPosition(span.end)),\n          (underline) => color(underline),\n          (gutter) => chalk.bgWhite(gutter.trimEnd()) + ' ',\n        )\n        output += '\\n'\n      }\n      output += '    ' + message\n    }\n  }\n\n  output += '\\n'\n\n  return output\n}\n\nfunction formatDiagnostic(\n  fileName: string,\n  diagnostic: TS.server.protocol.Diagnostic,\n): string {\n  const errorMessage = `${diagnostic.category} ${diagnostic.source ?? ''}${\n    diagnostic.code ?? ''\n  }: ${diagnostic.text}`\n\n  const relativeFileName = convertToRelativePath(fileName)\n  const line = diagnostic.start.line + 1\n  const column = diagnostic.start.offset + 1\n\n  return `${relativeFileName}(${line},${column}): ${errorMessage}`\n}\n\nconst ERROR_RE = /^(error)$/i\nfunction getErrorCount(diagnostics: Diagnostics): number {\n  return diagnostics.reduce(\n    (count, diagnostic) =>\n      count +\n      diagnostic.diagnostics.filter((diagnostic) =>\n        ERROR_RE.test(diagnostic.category),\n      ).length,\n    0,\n  )\n}\n\nfunction convertToRelativePath(fileName: string): string {\n  return Path.isAbsolute(fileName)\n    ? Path.relative(directory, fileName).replace(/\\\\/g, '/')\n    : fileName\n}\n\nasync function _cli(): Promise<void> {\n  const {\n    pretty,\n    vue,\n    help,\n    watch,\n    format,\n    _: argv,\n  } = parseArgs(process.argv.slice(2), {\n    boolean: ['json', 'rdjson', 'verbose', 'vue', 'help', 'pretty', 'watch'],\n    string: ['format'],\n    default: { pretty: true, format: 'raw' },\n  })\n\n  if (help === true) {\n    console.error(\n      `\nUsage: vuedx-typecheck [directory] <options>\n\nOptions\n    --format    One of 'raw', 'json' or 'rdjson'\n    --vue       process only vue files\n    --no-pretty Pretty print output\n    --help      display help\n    --watch     Watch files for changes\n`.trim(),\n    )\n    process.exit(0)\n  }\n\n  directory =\n    argv[0] != null\n      ? Path.isAbsolute(argv[0])\n        ? argv[0]\n        : Path.resolve(process.cwd(), argv[0])\n      : process.cwd()\n\n  if (!FS.existsSync(directory)) {\n    console.error(`Cannot find directory: \"${String(argv[0])}\"`)\n    process.exit(1)\n  }\n\n  if (format === 'raw') {\n    console.debug('Running for ' + directory)\n  }\n\n  if (!FS.statSync(directory).isDirectory()) {\n    console.error(\n      `Expecting a directory, but \"${\n        process.argv[2] ?? ''\n      }\" is not a directory.`,\n    )\n    process.exit(1)\n  }\n\n  collect('cli exec', {\n    watch,\n    format,\n    vue,\n    pretty,\n  })\n\n  const controller = new AbortController()\n  const cursor = getDiagnosticsStream(\n    directory,\n    watch === true ? controller.signal : null,\n    process.env['DEBUG'] != null,\n    vue === true ? (fileName) => fileName.endsWith('.vue') : undefined,\n  )\n\n  let result: IteratorResult<Diagnostics[0], Diagnostics>\n  while ((result = await cursor.next()).done !== true) {\n    if (format === 'raw') {\n      await handleResults([result.value], { format, pretty, vue })\n    }\n  }\n\n  invariant(result.done, 'Expected done to be true')\n  if (format === 'raw') {\n    clearScreen()\n  }\n\n  await handleResults(result.value, { format, pretty, vue })\n}\n\nexport async function cli(): Promise<void> {\n  try {\n    await _cli()\n  } catch (error) {\n    collectError(error as Error)\n    throw error\n  }\n}\n\n/**\n * Return diagnostic result in Reviewdog Diagnostic Format\n * @see https://github.com/reviewdog/reviewdog/tree/main/proto/rdf#rdjson\n */\nfunction encodeRdJSON(result: Diagnostics, pretty: boolean): string {\n  const severityMap = {\n    warning: 'WARNING',\n    error: 'ERROR',\n    suggestion: 'INFO',\n    message: 'INFO',\n  }\n\n  return JSON.stringify(\n    {\n      source: {\n        name: 'VueDX typecheck',\n        url: 'https://github.com/znck/vue-developer-experience/tree/main/packages/typecheck',\n      },\n      diagnostics: result.flatMap((sourceFile) => {\n        return sourceFile.diagnostics.map((diagnostic) => ({\n          message: diagnostic.text,\n          severity:\n            severityMap[diagnostic.category as keyof typeof severityMap],\n          location: {\n            path: sourceFile.fileName,\n            range: {\n              start: {\n                line: diagnostic.start.line,\n                column: diagnostic.start.offset,\n              },\n              end: { line: diagnostic.end.line, column: diagnostic.end.offset },\n            },\n          },\n          code: {\n            value: `${diagnostic.code ?? ''}`,\n          },\n          relatedInformation: diagnostic.relatedInformation?.map((info) => ({\n            message: info.message,\n            severity: severityMap[info.category as keyof typeof severityMap],\n            location:\n              info.span != null\n                ? {\n                    path: info.span.file,\n                    range: {\n                      start: {\n                        line: info.span.start.line,\n                        column: info.span.start.offset,\n                      },\n                      end: {\n                        line: info.span.end.line,\n                        column: info.span.end.offset,\n                      },\n                    },\n                  }\n                : undefined,\n            code: {\n              value: `${info.code ?? ''}`,\n            },\n          })),\n        }))\n      }),\n    },\n    null,\n    pretty ? 2 : 0,\n  )\n}\n\nasync function handleResults(\n  result: Diagnostics,\n  {\n    vue,\n    format,\n    pretty,\n  }: {\n    vue: boolean\n    pretty: boolean\n    format: string\n  },\n): Promise<void> {\n  if (vue) {\n    result = result.filter((item) => item.fileName.endsWith('.vue'))\n  }\n\n  result.forEach((sourceFile) => {\n    sourceFile.fileName = convertToRelativePath(sourceFile.fileName)\n    sourceFile.diagnostics.forEach((diagnostic) => {\n      diagnostic.relatedInformation?.forEach((info) => {\n        if (info.span != null) {\n          info.span.file = convertToRelativePath(info.span.file)\n        }\n      })\n    })\n  })\n\n  switch (format) {\n    case 'json':\n      print(JSON.stringify(result, null, pretty ? 2 : 0))\n      break\n    case 'rdjson':\n      print(encodeRdJSON(result, pretty))\n      break\n    case 'raw':\n      {\n        const fn = pretty\n          ? formatDiagnosticsWithColorAndContext\n          : formatDiagnostic\n        const content = await Promise.all(\n          result.flatMap((sourceFile) =>\n            sourceFile.diagnostics.map((diagnostic) =>\n              fn(sourceFile.fileName, diagnostic),\n            ),\n          ),\n        )\n\n        print(content.join('\\n'))\n\n        const count = getErrorCount(result)\n\n        print(`\\nFound ${count} ${count === 1 ? 'error' : 'errors'}.\\n`)\n      }\n      break\n    default:\n      throw new Error(`Unknown output format: \"${format}\"`)\n  }\n}\n","import { collectError, Telemetry } from '@vuedx/shared'\nimport { version } from '../package.json'\nimport { Diagnostics, getDiagnostics as _getDiagnostics } from './diagnostics'\n\nimport { cli as cli2 } from './cli'\n\nexport type { Diagnostics }\nexport async function cli(): Promise<void> {\n  setup()\n\n  return await cli2()\n}\nexport async function getDiagnostics(directory: string): Promise<Diagnostics> {\n  setup()\n\n  try {\n    return await _getDiagnostics(directory)\n  } catch (error) {\n    collectError(error as Error)\n    return []\n  }\n}\n\nfunction setup(): void {\n  Telemetry.setup(\n    'https://212f65f46796440ebbe974f24b20ffae@o237831.ingest.sentry.io/5595698',\n    'typecheck',\n    version,\n    process.env['CI'] != null ? 1 : 0.25,\n    {\n      ci: process.env['CI'],\n    },\n  )\n}\n"],"names":["resolveFrom","Path","fork","createInterface","toNormalizedPath","TS","FS","invariant","glob","getDiagnostics","flatten","chalk","readline","FSP","parseArgs","collect","cli","collectError","cli2","_getDiagnostics","Telemetry"],"mappings":"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"}